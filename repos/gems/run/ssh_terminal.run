#
# \brief  Test for the SSH terminal (based on test for TCP terminal)
# \author Norman Feske
# \date   2011-09-08
#

# Build
#

set build_components {
	core init
	drivers/timer
	drivers/nic
	drivers/rtc
	lib/vfs/jitterentropy
	server/ssh_terminal
	test/libports/ncurses
	lib/libc_noux
	noux/minimal
	noux-pkg/coreutils
	noux-pkg/vim
	noux-pkg/bash
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

# from: https://github.com/genodelabs/genode/issues/1907
# write default vimrc file
set vimrc_fd [open "bin/vim/share/vim/vimrc" w]
puts $vimrc_fd {
set noloadplugins
set hls
set nocompatible
set laststatus=2
set noswapfile
set viminfo=}
close $vimrc_fd

exec tar cfv bin/bash.tar      -h -C bin/bash .
exec tar cfv bin/coreutils.tar -h -C bin/coreutils .
exec tar cfv bin/vim.tar       -h -C bin/vim .

create_boot_directory

#
# Generate config
#

set config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>
	<start name="nic_drv">
		<resource name="RAM" quantum="4M"/>
		<provides> <service name="Nic"/> </provides>
	</start>
	<start name="rtc_drv">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Rtc"/> </provides>
	</start>
	<start name="ssh_terminal">
		<resource name="RAM" quantum="8M"/>
		<provides> <service name="Terminal"/> </provides>
		<config>
			<policy label="noux -> "
				port="8888"
				user="myuser"
				password="mypassword"
				dsa_key="/etc/ssh/dsa_key"
				rsa_key="/etc/ssh/rsa_key"
			/>
			<vfs>
				<dir name="dev">
					<log/>
					<jitterentropy name="random"/>
					<jitterentropy name="urandom"/>
					<rtc/>
				</dir>
				<dir name="etc">
					<dir name="ssh">
						<rom name="dsa_key"/>
						<rom name="rsa_key"/>
					</dir>
				</dir>
			</vfs>
			<libc   ip_addr="10.0.2.55" netmask="255.255.255.0" gateway="10.0.2.1"
				stdout="/dev/log" stderr="/dev/log">
			</libc>
		</config>
	</start>
	<start name="noux">
		<resource name="RAM" quantum="1G"/>
		<config verbose="yes">
			<fstab>
				<tar name="coreutils.tar" />
				<tar name="vim.tar" />
				<tar name="bash.tar" />
			</fstab>
			<start name="/bin/bash">
				<env name="TERM" value="linux" />
			</start>
		</config>
	</start>
}

append_platform_drv_config

append config {
</config>
}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core ld.lib.so init
	timer nic_drv rtc_drv
	libc.lib.so pthread.lib.so libm.lib.so lwip.lib.so libc_pipe.lib.so
	libc_lock_pipe.lib.so libc_noux.lib.so
	libcrypto.lib.so libssh.lib.so zlib.lib.so ncurses.lib.so
	vfs_jitterentropy.lib.so
	ssh_terminal dsa_key rsa_key
	noux
	coreutils.tar vim.tar bash.tar
}

# platform-specific modules
append_platform_drv_boot_modules

build_boot_image $boot_modules

#
# Execute test
#

# qemu config
append qemu_args " -m 128 -nographic "

append_if [have_spec x86]     qemu_args " -net nic,model=e1000 "
append_if [have_spec lan9118] qemu_args " -net nic,model=lan9118 "

append qemu_args " -net user -redir tcp:5555::8888 "

run_genode_until forever

#
# Now, connect via 'telnet localhost 5555'
#

# vi: set ft=tcl :
